import 'package:firebase_core/firebase_core.dart';
import 'package:logger/logger.dart';

class FirebaseConfig {
  static final Logger _logger = Logger();
  
  // Firebase 설정 옵션 (기본값)
  static const FirebaseOptions _defaultOptions = FirebaseOptions(
    apiKey: 'YOUR_API_KEY', // 실제 API 키로 교체 필요
    appId: 'YOUR_APP_ID', // 실제 앱 ID로 교체 필요
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID', // 실제 값으로 교체 필요
    projectId: 'YOUR_PROJECT_ID', // 실제 프로젝트 ID로 교체 필요
    storageBucket: 'YOUR_STORAGE_BUCKET', // 실제 스토리지 버킷으로 교체 필요
  );

  // Android용 Firebase 설정
  static const FirebaseOptions _androidOptions = FirebaseOptions(
    apiKey: 'YOUR_ANDROID_API_KEY',
    appId: 'YOUR_ANDROID_APP_ID',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    projectId: 'YOUR_PROJECT_ID',
    storageBucket: 'YOUR_STORAGE_BUCKET',
  );

  // iOS용 Firebase 설정
  static const FirebaseOptions _iosOptions = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: 'YOUR_IOS_APP_ID',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    projectId: 'YOUR_PROJECT_ID',
    storageBucket: 'YOUR_STORAGE_BUCKET',
    iosBundleId: 'com.yourcompany.bomt',
  );

  /// Firebase 초기화
  static Future<void> initialize() async {
    try {
      _logger.i('🔥 [FIREBASE] Initializing Firebase...');
      
      await Firebase.initializeApp(
        options: _getFirebaseOptions(),
      );
      
      _logger.i('✅ [FIREBASE] Firebase initialized successfully');
    } catch (e) {
      _logger.e('❌ [FIREBASE] Firebase initialization failed: $e');
      rethrow;
    }
  }

  /// 플랫폼별 Firebase 옵션 반환
  static FirebaseOptions _getFirebaseOptions() {
    // 현재는 기본 옵션 사용
    // 실제 앱에서는 플랫폼별로 다른 설정을 사용할 수 있음
    return _defaultOptions;
  }

  /// Firebase 설정 상태 확인
  static bool get isInitialized {
    return Firebase.apps.isNotEmpty;
  }

  /// 현재 Firebase 앱 인스턴스
  static FirebaseApp get app {
    return Firebase.app();
  }
}